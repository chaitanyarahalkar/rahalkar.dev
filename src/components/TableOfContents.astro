---
import type { MarkdownHeading } from 'astro'
import TOCHeading from '~/components/TableOfContentsHeading.astro'

interface Props {
  headings: MarkdownHeading[]
}

const { headings } = Astro.props

const filteredHeadings = headings.filter(({ depth }) => depth >= 2 && depth <= 3)
---

<script>
  const anchors = document.querySelectorAll('h2[id], h3[id]')
  const links = document.querySelectorAll('details.toc > nav > ul > li')
  if (anchors.length === links.length && anchors.length > 0) {
    window.addEventListener('scroll', (_event) => {
      let scrollTop = window.scrollY
      let highlighted = false
      // then iterate backwards, on the first match highlight it and break
      for (var i = anchors.length - 1; i >= 0; i--) {
        const anchor = anchors[i] as HTMLElement
        if (!highlighted && scrollTop > anchor.offsetTop - 75) {
          links[i].classList.add('active-heading')
          highlighted = true
        } else {
          links[i].classList.remove('active-heading')
        }
      }
    })
  }
</script>

<style>
  details[open] summary:before {
    transform: rotate(90deg);
  }
</style>
